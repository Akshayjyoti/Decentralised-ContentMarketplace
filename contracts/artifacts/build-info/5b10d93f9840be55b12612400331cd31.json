{
	"id": "5b10d93f9840be55b12612400331cd31",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ballot_test.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract myContract {\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ballot_test.sol": {
				"myContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ballot_test.sol\":35:67  contract myContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ballot_test.sol\":35:67  contract myContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206f5cae98bffba864606bbe44153518519e38e215b2eccbd8783a484cfd8db7e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206f5cae98bffba864606bbe44153518519e38e215b2eccbd8783a484cfd8db7e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x5CAE98BFFBA864606BBE44153518519E CODESIZE 0xE2 ISZERO 0xB2 0xEC 0xCB 0xD8 PUSH25 0x3A484CFD8DB7E564736F6C6343000807003300000000000000 ",
							"sourceMap": "35:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206f5cae98bffba864606bbe44153518519e38e215b2eccbd8783a484cfd8db7e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x5CAE98BFFBA864606BBE44153518519E CODESIZE 0xE2 ISZERO 0xB2 0xEC 0xCB 0xD8 PUSH25 0x3A484CFD8DB7E564736F6C6343000807003300000000000000 ",
							"sourceMap": "35:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 67,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 67,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f5cae98bffba864606bbe44153518519e38e215b2eccbd8783a484cfd8db7e564736f6c63430008070033",
									".code": [
										{
											"begin": 35,
											"end": 67,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 67,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 67,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 67,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 67,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 67,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ballot_test.sol\":\"myContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ballot_test.sol\":{\"keccak256\":\"0xad619ebd37091c2c77987db9f08b839d3da47956659a8f3b7e72ef74ee3ff5c1\",\"urls\":[\"bzz-raw://5bcbb0aa8ec25ef8a1b8a374532f1381be7bf65cf95db99770f2cc35cb057f60\",\"dweb:/ipfs/Qmb7Cm61H1i6sq9Rw6RJwFfr4VvtHywofjtMtWKizyxVNM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ballot_test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ballot_test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ballot_test.sol": {
				"ast": {
					"absolutePath": "contracts/ballot_test.sol",
					"exportedSymbols": {
						"myContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "myContract",
							"nameLocation": "44:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:32:0",
							"usedErrors": []
						}
					],
					"src": "0:67:0"
				},
				"id": 0
			}
		}
	}
}