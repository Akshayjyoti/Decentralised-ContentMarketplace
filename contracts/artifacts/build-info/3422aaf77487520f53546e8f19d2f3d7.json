{
	"id": "3422aaf77487520f53546e8f19d2f3d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ballot_test.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract myContract {\r\n\r\n    string stringVal;\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ballot_test.sol": {
				"myContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ballot_test.sol\":35:86  contract myContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ballot_test.sol\":35:86  contract myContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122024c1fc8ea6deaec9aa074347093d2792f74cd25891f79104b09602b96201cefd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122024c1fc8ea6deaec9aa074347093d2792f74cd25891f79104b09602b96201cefd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC1 0xFC DUP15 0xA6 0xDE 0xAE 0xC9 0xAA SMOD NUMBER SELFBALANCE MULMOD RETURNDATASIZE 0x27 SWAP3 0xF7 0x4C 0xD2 PC SWAP2 0xF7 SWAP2 DIV 0xB0 SWAP7 MUL 0xB9 PUSH3 0x1CEFD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:51:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122024c1fc8ea6deaec9aa074347093d2792f74cd25891f79104b09602b96201cefd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xC1 0xFC DUP15 0xA6 0xDE 0xAE 0xC9 0xAA SMOD NUMBER SELFBALANCE MULMOD RETURNDATASIZE 0x27 SWAP3 0xF7 0x4C 0xD2 PC SWAP2 0xF7 SWAP2 DIV 0xB0 SWAP7 MUL 0xB9 PUSH3 0x1CEFD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "35:51:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 86,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 86,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024c1fc8ea6deaec9aa074347093d2792f74cd25891f79104b09602b96201cefd64736f6c63430008070033",
									".code": [
										{
											"begin": 35,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 86,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 86,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 86,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 86,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ballot_test.sol\":\"myContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ballot_test.sol\":{\"keccak256\":\"0x31b1cd1cf1a078a7827c48b3bed6184aa442b8ebe450e74b55a8ffc6695be44d\",\"urls\":[\"bzz-raw://101c528387874db0bf1f999d446be75e05cc5da3da339010d7d04b6314035eef\",\"dweb:/ipfs/QmZQ88EcAZF8bBThUPQJBiKdrzELTt9YqP5LrfDan13HjL\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ballot_test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ballot_test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ballot_test.sol": {
				"ast": {
					"absolutePath": "contracts/ballot_test.sol",
					"exportedSymbols": {
						"myContract": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "myContract",
							"nameLocation": "44:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "stringVal",
									"nameLocation": "71:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "64:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "64:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 5,
							"src": "35:51:0",
							"usedErrors": []
						}
					],
					"src": "0:86:0"
				},
				"id": 0
			}
		}
	}
}